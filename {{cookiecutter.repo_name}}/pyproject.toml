[tool.poetry]
name = "{{cookiecutter.repo_name}}"
version = "0.1.0"
description = ""
authors = ["Ben Beecher <Ben@lightmatter.com>"]

[tool.poetry.dependencies]
python = "^3.10"
django-environ = "^0.8.1"
psycopg2-binary = "^2.9.3"
django-extensions = "^3.1.5"
django-model-utils = "^4.2.0"
boto3 = "^1.20.46"
django-storages = "^1.12.3"
uvicorn = "^0.17.1"
gunicorn = "^20.1.0"
sentry-sdk = "^1.5.4"
Django = {extras = ["argon2"], version = "^4.0.2"}
whitenoise = {extras = ["brotli"], version = "^5.3.0"}
django-allauth = "^0.47.0"
django-htmx = "^1.8.0"
django-annoying = "^0.10.6"
Pillow = "^9.0.0"
django-anymail = {extras = ["sendgrid"], version = "^8.5"}
django-vite = "^1.3.0"
django-components = "^0.17"
tblib = "^1.7.0"
django-cachalot = "^2.5.0"
redis = "^4.1.2"
hiredis = "^2.0.0"
django-redis = "^5.2.0"
django-ipware = "^4.0.2"
analytics-python = "^1.4.0"
djangorestframework = "^3.13.1"

[tool.poetry.dev-dependencies]
ipython = "^7.31.1"
ipdb = "^0.13.9"
ptpython = "^3.0.20"
django-debug-toolbar = "^3.2.4"
model-bakery = "^1.4.0"
coverage = "^6.3.1"
watchdog = "2.1.6"
pylint-django = "2.4.4"
Werkzeug = "2.0.2"
bandit = "1.7.2"
honcho = "1.1.0"
unittest-xml-reporting = "^3.2.0"
playwright = "^1.18.2"
pywatchman = "^1.4.1"
icecream = "^2.1.1"
pre-commit = "^2.17.0"
flake8 = "3.9.2"
flakehell = "^0.9.0"
flake8-bandit = "^2.1.2"
flake8-bugbear = "^21.11.29"
flake8-builtins = "^1.5.3"
flake8-eradicate = "^1.2.0"
flake8-mutable = "^1.2.0"
flake8-django = "^1.1.2"
black = "^21.12b0"
isort = "^5.10.1"
djlint = "^0.7.4"
pudb = "^2022.1"
poetryup = "^0.5.1"

[tool.black]
line-length = 92
target-version = ['py310']
include = '\.pyi?$'
force-exclude = '''
(
  /migrations/
)
'''

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

ignore_errors = true
omit = ["*/migrations/*","manage.py","sampleapp/config/*"]

[tool.isort]
line_length = "92"
multi_line_output = "3"
include_trailing_comma = "True"
use_parentheses = "True"
combine_as_imports = "True"
skip_glob = "*migrations/*.py"
known_standard_library = "django"
known_third_party = "django.contrib,django.utils"

[tool.ipdb]
context = 10

[tool.flakehell]
exclude = ["README.rst", "README.md", "*/settings/*", "*/migrations/*"]
format = "colored"
max_line_length = 92
show_source = true
extended_default_ignore=[]  # https://github.com/flakehell/flakehell/issues/10#issuecomment-822720074

[tool.flakehell.plugins]
flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-django = ["+*"]
flake8-eradicate = ["+*"]
flake8-mutable = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.djlint]
profile="django"
ignore="H023"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
