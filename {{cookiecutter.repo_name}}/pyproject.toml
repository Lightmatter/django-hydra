[tool.poetry]
name = "{{cookiecutter.repo_name}}"
version = "0.1.0"
description = ""
authors = ["Ben Beecher <ben@lightmatter.com>"]

[tool.poetry.dependencies]
python = "^3.10"
Django = {extras = ["argon2"], version = "^4.0.4"}
whitenoise = {extras = ["brotli"], version = "^5.3.0"}
django-allauth = "^0.47.0"
django-htmx = "^1.8.0"
django-annoying = "^0.10.6"
django-environ = "^0.8.1"
django-extensions = "^3.1.5"
django-model-utils = "^4.2.0"
psycopg2-binary = "^2.9.3"
boto3 = "^1.20.46"
django-storages = "^1.12.3"
uvicorn = "^0.17.1"
gunicorn = "^20.1.0"
sentry-sdk = "^1.5.4"
Pillow = "^9.0.0"
django-anymail = {extras = ["sendgrid"], version = "^8.5"}
django-vite = "^1.3.0"
tblib = "^1.7.0"
django-cachalot = "^2.5.0"
redis = "^4.1.2"
hiredis = "^2.0.0"
django-redis = "^5.2.0"
django-jinja = "^2.10.2"
heroicons = {extras = ["jinja"], version = "^1.8.0"}

[tool.poetry.dev-dependencies]
Werkzeug = "2.0.2"
coverage = {extras = ["toml"], version = "^6.4.1"}
ipython = "^7.31.1"
ipdb = "^0.13.9"
ptpython = "^3.0.20"
django-debug-toolbar = "^3.2.4"
model-bakery = "^1.4.0"
watchdog = "2.1.6"
honcho = "1.1.0"
unittest-xml-reporting = "^3.2.0"
playwright = "^1.18.2"
pywatchman = "^1.4.1"
icecream = "^2.1.1"
pre-commit = "^2.17.0"
pudb = "^2022.1"
poetryup = "^0.5.1"
importmagic = "^0.1.7"
epc = "^0.0.5"
django-silk = "^5.0.1"

[tool.black]
force-exclude = '''
(
  /migrations/
)
'''
include = '\.pyi?$'
line-length = 92
target-version = ['py310']

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

ignore_errors = true
omit = ["*/migrations/*","manage.py","{{cookiecutter.repo_name}}/config/*"]

[tool.isort]
line_length = "92"
profile = "black"
skip_glob = "*migrations/*.py"
known_third_party = "django,django.contrib,django.utils"

[tool.ipdb]
context = 10

[tool.pydocstyle]
select = ""

[tool.flakeheaven]
base = "https://raw.githubusercontent.com/flakeheaven/flakeheaven/master/pyproject.toml"
exclude = ["README.rst", "README.md", "*/settings/*", "*/migrations/*"]
format = "grouped"
max_line_length = 92
show_source = true

[tool.flakeheaven.plugins]
flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-django = ["+*"]
flake8-eradicate = ["+*"]
flake8-mutable = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*", "-E5110"]
pylint = ["-*"]


[tool.pylint]
    [tool.pylint.master]
    load-plugins="pylint_django, pylint_celery"
    ignore-paths = [ "^.*/migrations/.*$",]

    [tool.pylint.messages_control]
    disable = "C0330, C0326, C0115, C0116, C0114, C0103, C0415, W0707, W0511, R0903, R0201, R0913, W0212, W0221"

    [tool.pylint.format]
    max-line-length = "139"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
