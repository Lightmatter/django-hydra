perl_set $add_cors_headers '
    sub {
        my $r = shift;
        my $origin = $r->header_in("Origin");
        foreach my $domain (split /[\,\s\|]+/, $ENV{"ALLOWED_HOSTS"}) {
            return 1 if $origin =~ m|^https?://$domain$|;
            return 1 if $origin =~ m|^https?://(.*?)\.$domain$|;
        }
        return "";
    }
';

server {
    #this will be sed changed to the current port by the exec script
    include /tmp/port;
    server_name _;
    keepalive_timeout 5;

    #https everything
    if ($http_x_forwarded_proto = "http") {
       return 301 https://$host$request_uri;
    }

    #no clickjacking
    proxy_hide_header 'X-Frame-Options';
    add_header 'X-Frame-Options' 'DENY';

    #nosniff
    proxy_hide_header  "X-Content-Type-Options";
    add_header "X-Content-Type-Options" "nosniff";

    #force https
    proxy_hide_header "Strict-Transport-Security";
    add_header "Strict-Transport-Security" "max-age=31536000; includeSubDomains";

    proxy_http_version  1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_cache_bypass $http_upgrade;

    location /admin {
        proxy_pass http://gunicorn;
    }
    {% if cookiecutter.use_wagtail == 'y' %}
    location /cms {
        proxy_pass http://gunicorn;
    }
    {% endif %}
    location /auth {
        proxy_pass http://gunicorn;
    }
    location /api {
        proxy_pass http://gunicorn;
    }
    location /social {
        proxy_pass http://gunicorn;
    }
    location /backend {
        proxy_pass http://gunicorn;
    }

    location /static {
        # path for static files
        root /app/{{cookiecutter.repo_name}}/;

        # CORS
        if ($add_cors_headers) {
            add_header "Access-Control-Allow-Origin" "$http_origin";
            add_header "Access-Control-Allow-Methods" "*";
            add_header "Access-Control-Allow-Headers" "*";
            add_header "Access-Control-Expose-Headers" "ETag";
            add_header "Vary" "Origin";
        }
    }

    location /_next/static {
        proxy_cache STATIC;
        proxy_pass http://nextjs;

        # CORS
        if ($add_cors_headers) {
            add_header "Access-Control-Allow-Origin" "$http_origin";
            add_header "Access-Control-Allow-Methods" "*";
            add_header "Access-Control-Allow-Headers" "*";
            add_header "Access-Control-Expose-Headers" "ETag";
            add_header "Vary" "Origin";
        }
    }
    location / {
        proxy_pass http://nextjs;
    }
}

upstream gunicorn {
    server 0.0.0.0:8000 fail_timeout=0;
}
upstream nextjs {
    server localhost:3000 fail_timeout=0;
}
