name:  Django CI
on:
  pull_request
jobs:
  # uncomment when using docker
  # docker:
  #   name: Build the docker image
  #   runs-on: ubuntu-latest
  #   steps:
  #    - uses: actions/checkout@v2
  #    - name: Cache Docker layers
  #      uses: actions/cache@v2
  #      with:
  #          path: /tmp/.buildx-cache
  #          key: ${{ runner.os }}-buildx-${{ github.sha }}
  #          restore-keys: |
  #              ${{ runner.os }}-buildx-
  #    - uses: docker/setup-buildx-action@v2
  #      name: Set up Docker Buildx
  #      id: buildx

  #    - name: Build Docker image
  #      uses: docker/build-push-action@v2
  #      with:
  #         context: ./
  #         file: ./Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache
  #         target: runtime

  precommit:
    name: Precommit linting
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-node@v3
       with:
           node-version: lts/*
           cache: 'npm'
           cache-dependency-path: '**/package-lock.json'

     - run: npm install

     - run: python -m pip install pre-commit
       shell: bash
     - uses: actions/cache@v3
       with:
         path: ~/.cache/pre-commit
         key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
     - run: pre-commit run --show-diff-on-failure --color=always ${{ inputs.extra_args }} --all-files
       shell: bash


  test:
    name: Django CI
    runs-on: ubuntu-latest
    env:
        DATABASE_URL: "psql://postgres:postgres@localhost/postgres"
        DJANGO_SETTINGS_MODULE: "{{cookiecutter.repo_name}}.config.settings.test"
        DJANGO_SECRET_KEY: "!!!! Change me !!!!"
        ACUITY_USER_KEY: ""
        ACUITY_SECRET_KEY: ""

    steps:
     - uses: actions/checkout@v2

     - uses: actions/setup-node@v3
       with:
           node-version: lts/*
           cache: 'npm'
           cache-dependency-path: '**/package-lock.json'
     - run: npm install
     - run: npm run build

     - name: Load cached Poetry installation
       uses: actions/cache@v2
       with:
           path: ~/.local
           key: poetry-0  # increment to reset cache

     - name: Install and configure Poetry
       uses: snok/install-poetry@v1
       with:
           version: 1.2.0b1
           virtualenvs-create: true
           virtualenvs-in-project: true
           installer-parallel: true

     - uses: actions/setup-python@v4
       with:
           python-version-file: '.python-version'
           cache: 'poetry'

     - run: poetry env use 3.10.2 #TODO: get this dynamic on python version
     - run: poetry install
     - run: poetry run playwright install
     - run: poetry run coverage run --source='.' manage.py test
     - run: poetry run ./manage.py collectstatic --noinput


    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
        ports:
          - 5432:5432


  dependabot_approve:
    name: Approve Dependabot prs
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: test
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  dependabot_merge:
    name: Auto Merge Dependabot prs
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: dependabot_approve
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
