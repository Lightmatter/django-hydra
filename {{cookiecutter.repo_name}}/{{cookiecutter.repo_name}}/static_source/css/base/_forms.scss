/* stylelint-disable no-descending-specificity */
/* stylelint-disable at-rule-no-unknown */


/*
  This file controls the styling for "material" inputs.

  Note: Animations will only display if the input includes a placeholder!
  If your inputs appear to always be in the "focused" state, look there first.
  Included is an optional js/components/material.ts file which will
  replace empty placeholders with the adjacent input labels.

  inputs are styled in the order of .field > .input-box > [input]
  rem units are being used to keep things proportional, but we have a bit less
  control over t-s (tom-select) which is being styled using px.
*/

// base guidelines for styles. All assume a base font size of 16
$input-height: 3.75rem;                    // 60px
$textarea-height: calc($input-height * 3); // replace with "auto" to default to HTML rows
$border-radius: 0.5rem;                    // 8px
$focus-color: var(--primary-focus);        // Outline of focused text elements
$focus-label: var(--primary);              // color of focused label
$border-color: var(--silver);
$background-color: #fff;

.form-wrapper {
  @apply space-y-5 flex flex-row flex-wrap;
}

.select {
  overflow-x: visible !important;
  min-height: $input-height; // prevent flash of content from tom select starting up
  // basic styles for no js
  select {
    border-width: 0;
    width: 100%;
  }

  select ~ label {
    z-index: 1;
  }
}


@mixin label-focused($text-color:false) {
  @apply top-0 left-0 pt-2 pb-2 text-xs leading-3 w-full;

  @if $text-color {
    color: $text-color;
  }
  background-color: $background-color;
}

// label for empty, unfocused input.
@mixin label-resting {
  @apply text-left truncate max-w-full;
  @apply absolute pointer-events-none block top-0 w-full overflow-hidden;

  line-height: $input-height;
  transition: all 200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
    color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
    background-color 0s ease-out 200ms;
}

.field { // wrapper element for input/label, provides basic styling for input
  @apply border relative h-auto;

  border-color: $border-color;
  border-radius: $border-radius;
  background-color: $background-color;

  &.error {
    @apply block w-full border-red-300 text-red-900 placeholder-red-300;
    @apply focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm;
  }

  & + .errorlist {
    @apply -mx-5;
  }

  &:focus-within {
    box-shadow: 0 0 0 1px $focus-color;
    border-color: $focus-color;
  }

  > .input-box { // div with styling hook
    @apply mx-4 flex items-center h-full relative overflow-x-hidden overflow-ellipsis;

    input:not(:focus)::placeholder,
    textarea:not(:focus)::placeholder {
      @apply text-transparent;

      transition: color 200ms;
    }

    input:read-only {
      @apply pointer-events-none;
    }

    input + label,
    .ts-wrapper + label,
    select + label,
    textarea + label {
      @include label-resting;
    }

    .ts-wrapper + label { // gives select room for the drop down arrow.
      @apply pr-10;
    }

    input:focus + label,
    .ts-wrapper.focus + label,
    textarea:focus + label {
      @include label-focused($focus-label);
    }

    input:focus + label,
    input:not(:placeholder-shown) + label,
    .ts-wrapper.focus + label,
    .ts-wrapper.has-items + label,
    textarea:focus + label,
    textarea:not(:placeholder-shown) + label,
    input:-webkit-autofill + label,
    input:-webkit-autofill:hover + label,
    input:-webkit-autofill:focus + label,
    textarea:-webkit-autofill + label,
    textarea:-webkit-autofill:hover + label,
    textarea:-webkit-autofill:focus + label,
    select:-webkit-autofill + label,
    select:-webkit-autofill:hover + label,
    select:-webkit-autofill:focus + label,
    .input:has(textarea:focus) + label {
      @include label-focused;
    }

    // firefox does not support has queries, so turn off the label behavior there
    .password:has(input) + label,
    .input:has(input) + label {
      @include label-resting;
    }

    .password:has(input:focus) + label,
    .input:has(input:focus) + label {
      @include label-focused;
    }

    .input:has(textarea) + label {
      @include label-resting;
    }

    .input:has(textarea:focus) + label {
      @include label-focused;
    }

    .password:has(input:focus) + label,
    .password:has(input:not(:placeholder-shown)) + label,
    .password:has(input:-webkit-autofill) + label,
    .password:has(input:-webkit-autofill:hover) + label,
    .password:has(input:-webkit-autofill:focus) + label,
    .input:has(input:focus) + label,
    .input:has(input:not(:placeholder-shown)) + label,
    .input:has(input:-webkit-autofill) + label,
    .input:has(input:-webkit-autofill:hover) + label,
    .input:has(input:-webkit-autofill:focus) + label {
      @include label-focused;
    }
    .input:has(textarea:focus) + label,
    .input:has(textarea:not(:placeholder-shown)) + label,
    .input:has(textarea:-webkit-autofill) + label,
    .input:has(textarea:-webkit-autofill:hover) + label,
    .input:has(textarea:-webkit-autofill:focus) + label {
      @include label-focused;
    }

    @-moz-document url-prefix() {
      .password + label,
      .input + label {
        display: none;
      }

      .password input::placeholder,
      .input input::placeholder {
        color: var(--slate);
      }
    }

    // Front-end styling for tom-select
    .ts-wrapper {
      @apply ring-0 w-full left-0 border bg-transparent pr-0;

      height: $input-height;
      border-radius: 5px;

      &.multi {
        padding-top: 20px !important;
      }

      .ts-control {
        @apply border-0 w-full bg-transparent pl-0;

        padding-top: 20px;
      }

      .ts-dropdown {
        margin: 4px 0 0;
        border-radius: 8px;
        left: -22px;
        width: calc(100% + 44px);

        .ts-dropdown-content {
          padding: 0;

          .option {
            line-height: 48px;
            border-radius: 6px;
            margin: 4px;
          }
        }
      }
    }

    // textarea handles vertical alignment differently from inputs,
    // so unique styling is needed.
    textarea {
      @apply pt-4;

      line-height: calc($input-height / 2);
      height: $textarea-height;
    }

    input,
    textarea {
      @apply px-0 ring-0 w-full border-0 bg-transparent;

      min-height: $input-height;
      border-radius: $border-radius;
      transition: padding 0.3s;

      &:not(:placeholder-shown) {
        @apply pt-5;
      }

      &:focus {
        @apply pt-5;
      }

      @-moz-document url-prefix() {
        &:not(:placeholder-shown) {
          padding-top: 8px;
        }

        &:focus {
          padding-top: 8px;
        }
      }
      &[type=file] {
        height: 56px;
      }
    }

    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    textarea:-webkit-autofill,
    textarea:-webkit-autofill:hover,
    textarea:-webkit-autofill:focus,
    select:-webkit-autofill,
    select:-webkit-autofill:hover,
    select:-webkit-autofill:focus {
      background-clip: text;
      font-size: inherit;
    }
  }
}

.boolean-field {
  &.error {
    button {
      @apply border-2 border-red-300;
    }
  }
}

.radio-field {
  &.error {
    .radio-choice-ring {
      @apply ring-red-300;
    }
  }
}

.ts-wrapper {
  @apply px-4 ring-0;

  &.focus {
    .ts-control {
      box-shadow: none;
      border-color: var(--primary-accent);
    }
  }

  &.has-items {
    .ts-control {
      input {
        // opacity: 0; // uncomment this to hide input after select
      }
    }
  }

  .ts-control {
    input {
      height: inherit;
      width: auto;
    }
  }

  .ts-dropdown {
    margin: 4px 0 0;
    border-radius: 8px;

    .active {
      background-color: var(--silver);
      font-weight: 600;
      color: var(--primary-accent);
    }

    .option {
      padding-left: 16px;
      margin: 4px;
    }

    .ts-dropdown-content {
      padding: 0;

      .option {
        line-height: 48px;
        border-radius: 6px;
        margin: 4px;
      }
    }
  }
}

.left-icon {
  @apply absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none;
}

.right-icon {
  @apply absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none;
}

.password ~ .right-icon {
  @apply pr-7;
}
