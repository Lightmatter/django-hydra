# This docker-compose.yml file is used to set up your project in the local
# development environment *only*. It is *not* used in deployment to our cloud
# servers, and has no effect whatsoever in cloud deployments.
#
# See our Developer Handbook for more information:
# http://docs.divio.com/en/latest/reference/docker-docker-compose.html
version: "3.6"
services:
  web:
    build:
      context: "."
      target: dev
      args:
        DATABASE_URL: "psql://{{cookiecutter.repo_name}}:{{cookiecutter.repo_name}}@db/samplesapp"
    depends_on:
      - db
    links:
      - "db:db"
    # Change the port if you'd like to expose your project locally on a
    # different port, for example if you already use port 8000 for
    # something else.
    ports:
      - "8000:8000"
      - "3000:3000"
      - "4000:4000"
      - "9229:9229"
    environment:
      - ALLOWED_HOSTS="*"
      - SECRET_KEY="foobar"
      - DATABASE_URL=psql://{{cookiecutter.repo_name}}:{{cookiecutter.repo_name}}@db/{{cookiecutter.repo_name}}
      - DJANGO_SETTINGS_MODULE={{cookiecutter.repo_name}}.{{cookiecutter.repo_name}}.settings.local
      - API_BASE_URL=""
      - PORT=4000
      - ENVIRONMENT=local
    volumes:
      - ".:/app/"
      - "./image/runit/django:/etc/service/django/run:ro"
    #   - ".:/app/:rw"
    #   - "/app/elevendirect/static_source/bundles/"
    #   - "./elevendirect/bundle_tracker/:/app/elevendirect/bundle_tracker/:rw"
    #   - "/app/elevendirect/static_source/static/"
    #   - "./data:/data:rw"
    # The default command that the container starts with. If you'd like to run
    # the project locally in Live configuration, you will need to change this.
    # See https://docs.divio.com/en/latest/how-to/local-in-live-mode.html.
    # command: python manage.py runserver_plus 0.0.0.0:8000
    # Add any environment variables your project needs to the .env-local file.
    # See https://docs.divio.com/en/latest/reference/configuration-environment-variables.html.
    # env_file: .env-local
#    environment:
  # On the Cloud, your database runs on a dedicated cluster. Locally, we
  # replicate it in a Docker container called "db".
  db:
    image: postgres:9.6-alpine
    environment:
      POSTGRES_DB: "{{cookiecutter.repo_name}}"
      POSTGRES_USER: "{{cookiecutter.repo_name}}"
      POSTGRES_PASSWORD: "{{cookiecutter.repo_name}}"
